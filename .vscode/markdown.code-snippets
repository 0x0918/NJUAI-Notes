{
    // Place your Notes workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    // Example:
    "accumulate": {
        "scope": "markdown",
        "prefix": "\\\\accumulate",
        "body": [
            "\\overset{\\vee}{B_r}(\\vec{a})",
        ],
        "description": "accumulate"
    },
    "logicparse": {
        "scope": "markdown",
        "prefix": "\\\\logicparse",
        "body": [
            "``` python {cmd matplotlib hide}",
            "import matplotlib",
            "matplotlib.use('TkAgg')",
            "from schemdraw.parsing import logicparse",
            "",
            "logicparse('not ((w and x) or (y and z))', outlabel='$\\overline{Q}$').draw()",
            "```",
        ],
        "description": "logicparse"
    },
    "jacobi": {
        "scope": "markdown",
        "prefix": "\\\\jacobi",
        "body": [
            "\\begin{pmatrix}\\frac{\\partial ${1:f}_1}{\\partial ${2:x}_1}&\\frac{\\partial ${1:f}_1}{\\partial ${2:x}_2}&\\cdots&\\frac{\\partial ${1:f}_1}{\\partial ${2:x}_${3:n}}\\\\\\\\\\frac{\\partial ${1:f}_2}{\\partial ${2:x}_1}&\\frac{\\partial ${1:f}_2}{\\partial ${2:x}_2}&\\cdots&\\frac{\\partial ${1:f}_2}{\\partial ${2:x}_${3:n}}\\\\\\\\\\vdots&\\vdots&\\ddots&\\vdots\\\\\\\\\\frac{\\partial ${1:f}_${3:m}}{\\partial ${2:x}_1}&\\frac{\\partial ${1:f}_${3:m}}{\\partial ${2:x}_2}&\\cdots&\\frac{\\partial ${1:f}_${3:m}}{\\partial ${2:x}_${3:n}}\\end{pmatrix}"
        ],
        "description": "logicparse"
    },
    "multiplus": {
        "scope": "markdown",
        "prefix": "\\\\multiplus",
        "body": [
            "${1:a}_{i1}${2:x}_1+${1:a}_{i2}${2:x}_1+\\cdots+${1:a}_{i${3:n}}${2:x}_${3:n}"
        ],
        "description": "logicparse"
    },
    "i=": {
        "scope": "markdown",
        "prefix": "\\\\i=",
        "body": [
            "i=1,2,\\cdots,n"
        ],
        "description": "logicparse"
    },
}